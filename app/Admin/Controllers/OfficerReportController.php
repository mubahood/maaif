<?php

namespace App\Admin\Controllers;

use App\Models\FinancialYear;
use App\Models\OfficerReport;
use Encore\Admin\Controllers\AdminController;
use Encore\Admin\Form;
use Encore\Admin\Grid;
use Encore\Admin\Show;

class OfficerReportController extends AdminController
{
    /**
     * Title for current resource.
     *
     * @var string
     */
    protected $title = 'Reports & Workplans';

    /**
     * Make a grid builder.
     *
     * @return Grid
     */
    protected function grid()
    {
        $grid = new Grid(new OfficerReport());

        $grid->filter(function ($filter) {
            $filter->disableIdFilter();
            $filter->equal('year_id', 'Filter by Year')
                ->select(FinancialYear::where([])->orderBy('id', 'desc')->get()->pluck('name', 'id'));
        });

        $protocol = isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? 'https' : 'http';
        $host = $_SERVER['SERVER_NAME'];
        $url = $_SERVER['REQUEST_URI'];
        $path = parse_url($url, PHP_URL_PATH);
        $segments = explode('/', rtrim($path, '/'));

        $lastSegment = end($segments);
        $slug = "";
        if ($lastSegment == 'report-members') {
            $slug = 'officer';
        } else {
            $slug = 'department';
        }

        $grid->model()
            ->orderBy('id', 'desc')
            ->where('type', $slug);
        $grid->disableActions();
        $grid->disableCreateButton();
        $grid->disableExport();
        $grid->disableColumnSelector();

        $grid->disableBatchActions();
        $grid->column('id', __('Id'))->hide();
        $grid->column('user_id', __('Officer'))
            ->display(function ($x) {
                if ($this->officer == null) {
                    return $x;
                }
                return $this->officer->name;
            })->sortable();
        $grid->column('year_id', __('Year id'))
            ->display(function ($x) {
                if ($this->year == null) {
                    return $x;
                }
                return $this->year->name;
            });
        $grid->column('comment', __('Comment'))->editable();
        $grid->column('print', __('Print'))->display(function () {
            return '<a target="_blank" href="' . url('report-officer-print?id=' . $this->id) . '" >PRINT REPORT</a>';
        });
        return $grid;
    }

    /**
     * Make a show builder.
     *
     * @param mixed $id
     * @return Show
     */
    protected function detail($id)
    {
        $show = new Show(OfficerReport::findOrFail($id));

        $show->field('id', __('Id'));
        $show->field('created_at', __('Created at'));
        $show->field('updated_at', __('Updated at'));
        $show->field('user_id', __('User id'));
        $show->field('year_id', __('Year id'));
        $show->field('district_id', __('District id'));
        $show->field('department_id', __('Department id'));
        $show->field('generated_by', __('Generated by'));
        $show->field('total_budget', __('Total budget'));
        $show->field('comment', __('Comment'));
        $show->field('submited', __('Submited'));

        return $show;
    }

    /**
     * Make a form builder.
     *
     * @return Form
     */
    protected function form()
    {
        $form = new Form(new OfficerReport());
        $form->disableCreatingCheck();
        $form->disableEditingCheck();
        $form->disableReset();

        /*         $form->number('user_id', __('User id'));
        $form->number('year_id', __('Year id'));
        $form->number('district_id', __('District id'));
        $form->number('department_id', __('Department id'));
        $form->number('generated_by', __('Generated by'));
        $form->number('total_budget', __('Total budget')); */
        $form->textarea('comment', __("Suppervisor's Remarks"));
        $form->radio('submited', __('Submit'))
            ->options([
                'Submit' => 'Submit',
                'Pending' => 'Pending',
            ]);

        return $form;
    }
}
